{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"My Dev Notes","text":"<p>Welcome to My Dev Notes \ud83d\udc4b</p> <p>This site contains my personal development notes, cheatsheets, and useful commands.</p>"},{"location":"docker/docker-cheatsheet/","title":"Docker Cheatsheet","text":""},{"location":"docker/docker-cheatsheet/#container","title":"Container","text":"<p>Running a container:</p> <p><code>docker container run image:tag</code></p> <p>Example: <code>docker container run nginx:latest</code></p> <p>Running a container in detached mode (-d):</p> <p><code>docker container run -d image:tag</code></p> <p>Example: <code>docker container run -d nginx:latest</code></p> <p>Starting a container with a different command instead of the default:</p> <p><code>docker container run image:tag command</code></p> <p>Example: <code>docker container run ubuntu:latest ping 127.0.0.1</code></p> <p>Running a container with a given name:</p> <p><code>docker container run --name name image:tag</code></p> <p>Example: <code>docker container run --name container1 -d nginx:latest</code></p> <p>Running another command inside a running container:</p> <p><code>docker container exec container_id|or|container_name command</code></p> <p>Example: <code>docker container exec 12a793b3fec0 ping 127.0.0.1</code></p> <p>Opening a shell inside a running container:</p> <p><code>docker container exec -it container_id|or|container_name sh</code></p> <p>Example: <code>docker container exec -it 12a793b3fec0 sh</code></p> <p>Creating a container with detached mode and shell connection (dit):</p> <p><code>docker container run -dit image:tag sh</code></p> <p>Example: <code>docker container run -dit nginx:latest sh</code></p> <p>Attaching to a container created with detached mode and shell:</p> <p><code>docker attach container_id|or|container_name</code></p> <p>Example: <code>docker attach 12a793b3fec0</code></p> <p>Stopping a container:</p> <p><code>docker container stop container_id|or|container_name</code></p> <p>Example: <code>docker container stop 12a793b3fec0</code></p> <p>Removing a container:</p> <p><code>docker container rm container_id|or|container_name</code></p> <p>Example: <code>docker container rm 12a793b3fec0</code></p> <p>Removing a running container (-f):</p> <p><code>docker container rm -f container_id|or|container_name</code></p> <p>Example: <code>docker container rm -f 12a793b3fec0</code></p> <p>Automatically remove container on exit (-rm):</p> <p><code>docker container run -rm image:tag</code></p> <p>Example: <code>docker container run -rm nginx:latest</code> (with -rm the container is automatically removed after stopping)</p> <p>Inspecting container details:</p> <p><code>docker container inspect container_id|or|container_name</code></p> <p>Example: <code>docker container inspect 12a793b3fec0</code></p> <p>Removing all containers (running and stopped) in the system:</p> <p><code>docker container rm -f $(docker ps -aq)</code></p> <p>Listing running containers:</p> <p><code>docker container ls</code> or</p> <p><code>docker container ps</code></p> <p>Listing all containers:</p> <p><code>docker container ls -a</code> or</p> <p><code>docker container ps -a</code></p> <p>Listing processes inside a running container:</p> <p><code>docker top container_id|or|container_name</code></p> <p>Example: <code>docker top 12a793b3fec0</code></p> <p>Viewing CPU, RAM, I/O usage of a running container:</p> <p><code>docker stats container_id|or|container_name</code></p> <p>Example: <code>docker stats 12a793b3fec0</code></p> <p>Limiting container memory usage (--memory, --memory-swap):</p> <p><code>docker container run --memory=value(b,k,m,g) --memory-swap=value(b,k,m,g) image:tag</code></p> <p>Example: <code>docker container run --memory=1g --memory-swap=2g nginx:latest</code> (With memory-swap you can also define swap space. b=byte, k=kilobyte, m=megabyte, g=gigabyte)</p> <p>Limiting container CPU usage (--cpus, --cpuset-cpus):</p> <p><code>docker container run --cpus=\"number_of_cores\" image:tag</code></p> <p>Example: <code>docker container run --cpus=\"3\" nginx:latest</code> (This limits the number of CPU cores the container can use)</p> <p><code>docker container run --cpuset-cpus=\"core_numbers\" image:tag</code></p> <p>Example: <code>docker container run --cpuset-cpus=\"0,4\" nginx:latest</code> (This sets which CPU cores the container can access)</p> <p>Setting environment variables for a container:</p> <p><code>docker container run --env environment_variable=value image:tag</code></p> <p>Example: <code>docker container run --env VAR1=test1 --env VAR2=test2 nginx:latest</code></p> <p>Copying files between container and host (both directions):</p> <p><code>docker cp container_id|or|container_name:path host_path</code></p> <p>Example: <code>docker cp 12a793b3fec0:/usr/src/app/ .</code></p>"},{"location":"docker/docker-cheatsheet/#image","title":"Image","text":"<p>Logging into a registry via Docker CLI:</p> <p><code>docker login registry_url</code></p> <p>Example: <code>docker login localhost:8080</code></p> <p>Pulling an image to the system:</p> <p><code>docker image pull image:tag</code></p> <p>Example: <code>docker image pull nginx:latest</code></p> <p>Pushing an image to Docker Hub (or another repository):</p> <p><code>docker image push repository/image:tag</code></p> <p>Example: <code>docker image push ozgurozturknet/adanzyedocker:latest</code></p> <p>Tagging an existing image with a new tag:</p> <p><code>docker image tag image:tag newimage:tag</code></p> <p>Example: <code>docker image tag nginx:latest ozgurozturknet/nginx:v1</code></p> <p>Inspecting image details:</p> <p><code>docker image inspect image:tag</code></p> <p>Example: <code>docker image inspect nginx:latest</code></p> <p>Listing image layers:</p> <p><code>docker image history image:tag</code></p> <p>Example: <code>docker image history nginx:latest</code></p> <p>Building a new image using Dockerfile:</p> <p><code>docker image build -t image:tag .</code></p> <p>Example: <code>docker image build -t ozgurozturknet/hello-world:latest .</code> (Dockerfile must be in the folder where this command is run)</p> <p>Using build args when building image:</p> <p><code>docker image build --build-arg arg=value -t image:tag .</code></p> <p>Example: <code>docker image build --build-arg VERSION=3.7.1 -t nginx:latest .</code></p> <p>Listing all images in the system:</p> <p><code>docker image ls</code></p> <p>Removing an image from the system:</p> <p><code>docker image rm image:tag</code></p> <p>Example: <code>docker image rm nginx:latest</code></p> <p>Creating an image from a container:</p> <p><code>docker commit container_id|or|container_name image:tag</code></p> <p>Example: <code>docker commit 12a793b3fec0 ozgurozturknet/img:latest</code></p> <p>Saving an image to a file and loading an image from a saved file:</p> <p><code>docker save image:tag -o filename.tar</code></p> <p>Example: <code>docker save ozgurozturknet/img:latest -o image.tar</code></p> <p><code>docker load -i filename.tar</code></p> <p>Example: <code>docker load -i imagecon1.tar</code></p>"},{"location":"docker/docker-cheatsheet/#volume","title":"Volume","text":"<p>Creating a volume:</p> <p><code>docker volume create volume_name</code></p> <p>Example: <code>docker volume create firstvolume</code></p> <p>Inspecting volume details:</p> <p><code>docker volume inspect volume_id|or|volume_name</code></p> <p>Example: <code>docker volume inspect firstvolume</code></p> <p>Listing all volumes in the system:</p> <p><code>docker volume ls</code></p> <p>Mounting a volume to a container (-v):</p> <p><code>docker container run -v volume_name:container_path image:tag</code></p> <p>Example: <code>docker container run -v firstvolume:/var/www/html image:tag</code></p> <p>Mounting a volume as read-only (:ro):</p> <p><code>docker container run -v volume_name:container_path:ro image:tag</code></p> <p>Example: <code>docker container run -v firstvolume:/var/www/html:ro image:tag</code></p> <p>Binding a host folder or file as a mount:</p> <p><code>docker container run -v host_folder_path:container_path image:tag</code></p> <p>Example: <code>docker container run -v c:\\websites:/usr/share/nginx/html nginx:latest</code></p> <p>Removing a volume:</p> <p><code>docker volume rm volume_name</code></p> <p>Example: <code>docker volume rm firstvolume</code></p>"},{"location":"docker/docker-cheatsheet/#network","title":"Network","text":"<p>Creating a user-defined bridge network (bridge):</p> <p><code>docker network create --driver=bridge network_name</code></p> <p>Example: <code>docker network create --driver=bridge bridge-net</code></p> <p>Creating a user-defined bridge network with IP settings:</p> <p><code>docker network create --driver=bridge --subnet=cidr --ip-range=cidr --gateway=ip_address network_name</code></p> <p>Example: <code>docker network create --driver=bridge --subnet=10.10.0.0/16 --ip-range=10.10.10.0/24 --gateway=10.10.10.10 bridge-net</code></p> <p>Listing all networks in the system:</p> <p><code>docker network ls</code></p> <p>Inspecting network details:</p> <p><code>docker network inspect network_name</code></p> <p>Example: <code>docker network inspect bridge-net</code></p> <p>Running a container connected to a non-default network:</p> <p><code>docker container run --network network_name image:tag</code></p> <p>Example: <code>docker container run --network bridge-net nginx:latest</code></p> <p>Connecting a running container to another network:</p> <p><code>docker network connect network_name container_id|or|container_name</code></p> <p>Example: <code>docker network connect bridge-net 12a793b3fec0</code></p> <p>Disconnecting a running container from a network:</p> <p><code>docker network disconnect network_name container_id|or|container_name</code></p> <p>Example: <code>docker network disconnect bridge-net 12a793b3fec0</code></p> <p>Running a container with published ports (-p):</p> <p><code>docker container run -p host_port:container_port/tcp_or_udp image:tag</code></p> <p>Example: <code>docker container run -p 8080:80 -p 53:53/udp nginx:latest</code></p>"},{"location":"docker/docker-cheatsheet/#logging","title":"Logging","text":"<p>Viewing logs created by a container:</p> <p><code>docker logs container_id|or|container_name</code></p> <p>Example: <code>docker logs 12a793b3fec0</code></p> <p>Viewing detailed logs in long format:</p> <p><code>docker logs --details container_id|or|container_name</code></p> <p>Example: <code>docker logs --details 12a793b3fec0</code></p> <p>Viewing logs within a specific date range:</p> <p><code>docker logs --since date_time --until date_time container_id|or|container_name</code></p> <p>Example: <code>docker logs --since 2020-01-13T11:34:43.154304300Z 12a793b3fec0</code> (since shows logs from the given time, until shows logs up to the given time)</p> <p>Viewing last N log entries:</p> <p><code>docker logs --tail number container_id|or|container_name</code></p> <p>Example: <code>docker logs --tail 10 12a793b3fec0</code> (lists the last 10 log entries)</p> <p>Following logs live:</p> <p><code>docker logs -f container_id|or|container_name</code></p> <p>Example: <code>docker logs -f 12a793b3fec0</code> (logs will show live as they occur; use Ctrl-C to exit)</p>"},{"location":"docker/docker-cli/","title":"Docker Command Reference","text":""},{"location":"docker/docker-cli/#image-commands","title":"Image Commands","text":"<ul> <li><code>docker build</code> \u2014 Build an image from a Dockerfile</li> <li><code>docker images</code> \u2014 List images</li> <li><code>docker rmi</code> \u2014 Remove one or more images</li> <li><code>docker tag</code> \u2014 Tag an image for a repository</li> </ul>"},{"location":"docker/docker-cli/#container-commands","title":"Container Commands","text":"<ul> <li><code>docker run</code> \u2014 Run a container</li> <li><code>docker ps</code> \u2014 List running containers</li> <li><code>docker stop</code> \u2014 Stop one or more running containers</li> <li><code>docker start</code> \u2014 Start one or more stopped containers</li> <li><code>docker restart</code> \u2014 Restart containers</li> <li><code>docker rm</code> \u2014 Remove one or more containers</li> <li><code>docker exec</code> \u2014 Run a command inside a running container</li> <li><code>docker logs</code> \u2014 Fetch logs from a container</li> </ul>"},{"location":"docker/docker-cli/#volume-commands","title":"Volume Commands","text":"<ul> <li><code>docker volume create</code> \u2014 Create a volume</li> <li><code>docker volume ls</code> \u2014 List volumes</li> <li><code>docker volume rm</code> \u2014 Remove a volume</li> </ul>"},{"location":"docker/docker-cli/#network-commands","title":"Network Commands","text":"<ul> <li><code>docker network create</code> \u2014 Create a network</li> <li><code>docker network ls</code> \u2014 List networks</li> <li><code>docker network rm</code> \u2014 Remove a network</li> </ul>"},{"location":"docker/docker-cli/#system-commands","title":"System Commands","text":"<ul> <li><code>docker system prune</code> \u2014 Remove unused data</li> <li><code>docker info</code> \u2014 Display system-wide information</li> <li><code>docker version</code> \u2014 Show Docker version info</li> </ul>"},{"location":"docker/docker-compose/","title":"Docker Compose Commands","text":"<p>Docker Compose is a tool for defining and running multi-container Docker applications. Below are some common Docker Compose commands with explanations using the new <code>docker compose</code> syntax.</p>"},{"location":"docker/docker-compose/#starting-services","title":"Starting Services","text":"<pre><code>docker compose up\n</code></pre> <ul> <li>Builds, (re)creates, starts, and attaches to containers for a service defined in <code>docker-compose.yml</code>.</li> </ul>"},{"location":"docker/docker-compose/#starting-services-in-detached-mode","title":"Starting Services in Detached Mode","text":"<pre><code>docker compose up -d\n</code></pre> <ul> <li>Starts the containers in the background (detached mode).</li> </ul>"},{"location":"docker/docker-compose/#stopping-services","title":"Stopping Services","text":"<pre><code>docker compose down\n</code></pre> <ul> <li>Stops and removes containers, networks, volumes, and images created by <code>docker compose up</code>.</li> </ul>"},{"location":"docker/docker-compose/#viewing-running-containers","title":"Viewing Running Containers","text":"<pre><code>docker compose ps\n</code></pre> <ul> <li>Lists containers started by <code>docker compose</code>.</li> </ul>"},{"location":"docker/docker-compose/#viewing-logs","title":"Viewing Logs","text":"<pre><code>docker compose logs\n</code></pre> <ul> <li>Shows output logs from containers.</li> </ul>"},{"location":"docker/docker-compose/#rebuilding-services","title":"Rebuilding Services","text":"<pre><code>docker compose build\n</code></pre> <ul> <li>Builds or rebuilds services.</li> </ul>"},{"location":"docker/docker-compose/#restarting-services","title":"Restarting Services","text":"<pre><code>docker compose restart\n</code></pre> <ul> <li>Restarts running containers.</li> </ul>"},{"location":"docker/docker-compose/#stopping-services-without-removing-containers","title":"Stopping Services Without Removing Containers","text":"<pre><code>docker compose stop\n</code></pre> <ul> <li>Stops running containers but does not remove them.</li> </ul>"},{"location":"docker/docker-compose/#summary","title":"Summary","text":"Command Description <code>docker compose up</code> Start and attach to containers <code>docker compose up -d</code> Start containers in detached mode <code>docker compose down</code> Stop and remove containers and networks <code>docker compose ps</code> List containers <code>docker compose logs</code> Show container logs <code>docker compose build</code> Build or rebuild services <code>docker compose restart</code> Restart running containers <code>docker compose stop</code> Stop containers without removing them <p>For more info, visit the official docs: https://docs.docker.com/compose/</p>"},{"location":"git/git-cheatsheet/","title":"Git Cheatsheet","text":""},{"location":"git/git-cheatsheet/#setup-and-configuration","title":"Setup and Configuration","text":"<p>Set user name:</p> <p><code>git config --global user.name \"yourusername\"</code></p> <p>Set user email:</p> <p><code>git config --global user.email \"youremail@mail.com\"</code></p> <p>Manage Personal Access Token info: GitHub PAT Docs</p>"},{"location":"git/git-cheatsheet/#repository-initialization","title":"Repository Initialization","text":"<p>Initialize Git repository:</p> <p><code>git init</code></p> <p>Clone repository:</p> <ul> <li> <p>Via https: <code>git clone https://github.com/yourusername/yourrepo.git your-new-directory</code></p> </li> <li> <p>Via ssh: <code>git clone git@github.com:yourusername/yourrepo.git your-new-directory</code></p> </li> </ul>"},{"location":"git/git-cheatsheet/#staging-and-committing","title":"Staging and Committing","text":"<p>Check the status of changes:</p> <p><code>git status</code></p> <p>Stage a file:</p> <p><code>git add README.md</code></p> <p>Stage multiple files:</p> <p><code>git add README.md index.html</code></p> <p>Stage all changes (excluding ignored):</p> <p><code>git add *</code></p> <p>or</p> <p><code>git add .</code></p> <p>Unstage a file:</p> <p><code>git rm --cached .vscode</code></p> <p>Unstage multiple files:</p> <p><code>git rm --cached -r .vscode/ bin/</code></p> <p>Unstage all files:</p> <p><code>git rm -r --cached .</code></p> <p>Commit with the message:</p> <p><code>git commit -m \"initial commit\"</code></p> <p>Amend last commit with staged changes:</p> <p><code>git commit --amend --all</code></p> <p>Change commit message:</p> <p><code>git commit -am \"updated commit\" --amend</code></p>"},{"location":"git/git-cheatsheet/#branching-and-merging","title":"Branching and Merging","text":"<p>List branches:</p> <p><code>git branch</code></p> <p>Create new branch:</p> <p><code>git branch feature-restructure</code></p> <p>Create the new branch and switch to it:</p> <p><code>git checkout -b feature-restructure</code></p> <p>Delete branch:</p> <p><code>git branch -D feature-restructure</code></p> <p>Rename branch:</p> <p><code>git branch -m feature-new-name</code></p> <p>Switch branch:</p> <p><code>git checkout $branch_name</code></p> <p>Merge branch into current branch:</p> <p><code>git merge feature-restructure</code></p>"},{"location":"git/git-cheatsheet/#working-with-commits","title":"Working with Commits","text":"<p>View commit history:</p> <p><code>git log</code></p> <p>Checkout specific commit:</p> <p><code>git checkout $commit_id</code></p> <p>Hard reset to commit (WARNING: discards changes):</p> <p><code>git reset --hard $commit_id</code></p> <p>Soft reset to commit:</p> <p><code>git reset --soft HEAD~</code></p> <p>Unstage file with restore:</p> <p><code>git restore --staged index.html</code></p> <p>Discard changes in working directory:</p> <p><code>git restore index.html</code></p>"},{"location":"git/git-cheatsheet/#remote-repositories","title":"Remote Repositories","text":"<p>Add remote URL:</p> <p><code>git remote add origin https://github.com/yourusername/yourrepo.git</code></p> <p>Remove remote URL:</p> <p><code>git remote remove origin</code></p> <p>Change remote URL:</p> <p><code>git remote set-url origin https://github.com/yourusername/yourrepo.git</code></p> <p>Show remote URL:</p> <p><code>git remote get-url origin</code></p>"},{"location":"git/git-cheatsheet/#pushing-and-pulling","title":"Pushing and Pulling","text":"<p>Push to remote branch:</p> <p><code>git push origin master</code></p> <p>Push and set upstream:</p> <p><code>git push --set-upstream origin main</code></p> <p>Push after the upstream set:</p> <p><code>git push</code></p> <p>Pull with rebase:</p> <p><code>git pull --rebase origin master</code></p> <p>Set upstream branch for current branch:</p> <p><code>git branch --set-upstream-to=origin/master</code></p> <p>Pull after the upstream set:</p> <p><code>git pull</code></p>"},{"location":"git/git-cheatsheet/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>Skip CI workflow by adding <code>[skip ci]</code> in the commit message</li> </ul> <p>Add <code>[skip ci]</code> anywhere in your git commit message to skip CI workflows.</p>"},{"location":"git/github-actions/","title":"GitHub Actions","text":""},{"location":"git/github-actions/#useful-links","title":"Useful Links","text":"<ul> <li>GitHub Actions Runners</li> <li>GitHub Actions Events</li> <li>GitHub Actions Events Filters</li> <li>GitHub Actions Workflow Skip</li> <li>GitHub Actions Contexts</li> <li>GitHub Actions Expressions</li> <li>GitHub Actions Workflow Syntax</li> <li>GitHub Actions Default Environment Variables</li> <li>GitHub Actions Reuse Workflows</li> </ul>"},{"location":"git/github-actions/#storing-actions-in-repositories-sharing-actions-with-others","title":"Storing Actions in Repositories &amp; Sharing Actions with Others","text":"<p>In this section, we explain how to create and share custom Actions stored in separate repositories, instead of keeping them inside the same repository as your workflows.</p>"},{"location":"git/github-actions/#how-to-create-and-share-a-custom-action-in-its-own-repository","title":"How to create and share a custom Action in its own repository:","text":"<ol> <li> <p>Create a new local project folder    This folder should contain your action.yml file and all the code needed for your Action. Important: Do not put your action.yml or code inside a .github/actions folder or similar. Keep everything at the    root level of your new project folder.</p> </li> <li> <p>Initialize a Git repository    Run the following command inside your project folder:</p> </li> </ol> <p><code>git init</code></p> <ol> <li>Add and commit your files</li> </ol> <p><code>git add .</code></p> <p><code>git commit -m \"Initial commit for my custom Action\"</code></p> <ol> <li> <p>Create a GitHub repository    Create a new repository on GitHub to host your Action.</p> </li> <li> <p>Connect your local repo to GitHub remote</p> </li> </ol> <p><code>git remote add origin https://github.com/my-account/my-action.git</code></p> <ol> <li>Tag a release version    It's a good practice to tag your Action versions for reuse:</li> </ol> <p><code>git tag -a -m \"My action release\" v1</code></p> <ol> <li>Push your code and tags to GitHub</li> </ol> <p><code>git push --follow-tags origin main</code></p> <ol> <li>Use your custom Action in workflows    Reference your custom Action in any other workflow by specifying the repository and tag, like this:</li> </ol> <p><code>uses: my-account/my-action@v1</code></p>"},{"location":"kubernetes/kubeadm/","title":"kubeadm Installation","text":"<p>You can find the kubernetes documentation here.</p>"},{"location":"kubernetes/kubeadm/#1-create-virtual-machines","title":"1. Create virtual machines","text":"<pre><code>$ multipass launch --name master -c 2 -m 2G -d 10G\n$ multipass launch --name node1 -c 2 -m 2G -d 10G\n</code></pre> <ul> <li>Connect to the master node and run <code>sudo hostnamectl set-hostname master</code>.   Connect to node1 and run <code>sudo hostnamectl set-hostname node1</code>.</li> </ul>"},{"location":"kubernetes/kubeadm/#2-activate-kernel-modules-and-disable-swap","title":"2. Activate kernel modules and disable swap.","text":"<pre><code>$ sudo modprobe overlay\n$ sudo modprobe br_netfilter\n</code></pre> <pre><code>$ cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n</code></pre> <pre><code>$ cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOF\n</code></pre> <pre><code>$ sudo sysctl --system\n</code></pre> <pre><code>$ sudo swapoff -a\n$ free -m\n$ sudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n</code></pre>"},{"location":"kubernetes/kubeadm/#3-install-containerd","title":"3. Install containerd","text":"<pre><code>$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker.gpg\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n$ sudo apt update\n$ sudo apt install containerd.io\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable --now containerd\n$ sudo systemctl start containerd\n$ sudo mkdir -p /etc/containerd\n$ sudo su -\n$ containerd config default | tee /etc/containerd/config.toml\n$ exit\n$ sudo sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml\n$ sudo systemctl restart containerd\n\n</code></pre>"},{"location":"kubernetes/kubeadm/#4-install-kubeadm","title":"4. Install kubeadm","text":"<pre><code>$ sudo ufw allow 6443/tcp\n$ sudo ufw allow 2379:2380/tcp\n$ sudo ufw allow 10250/tcp\n$ sudo ufw allow 10259/tcp\n$ sudo ufw allow 10257/tcp\n$ sudo apt-get update\n$ sudo apt-get install -y apt-transport-https ca-certificates curl\n$ sudo mkdir -p -m 755 /etc/apt/keyrings\n### E\u011fer Kubernetes 1.31'den ba\u015fka bir versiyon y\u00fcklemek isterseniz a\u015fa\u011f\u0131daki iki komuttaki v1.31 k\u0131s\u0131mlar\u0131n\u0131 d\u00fczeltin ####\n$ curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n$ echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list\n$ sudo apt-get update\n$ sudo apt-get install -y kubelet kubeadm kubectl\n$ sudo apt-mark hold kubelet kubeadm kubectl\n</code></pre>"},{"location":"kubernetes/kubeadm/#5-kubernetes-cluster-setup","title":"5. Kubernetes cluster setup","text":"<pre><code>$ sudo kubeadm config images pull\n\n$ sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=&lt;ip&gt; --control-plane-endpoint=&lt;ip&gt;\n</code></pre> <pre><code>$ mkdir -p $HOME/.kube\n$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n$ sudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre> <pre><code>$ kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/tigera-operator.yaml\n$ kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.1/manifests/custom-resources.yaml\n</code></pre> <pre><code>kubectl taint nodes --all node-role.kubernetes.io/control-plane-\nkubectl taint nodes --all node-role.kubernetes.io/master-\n</code></pre>"},{"location":"kubernetes/kubectl/","title":"kubectl Command Reference","text":""},{"location":"kubernetes/kubectl/#get-resources","title":"Get Resources","text":"<ul> <li><code>kubectl get pods</code> \u2014 List pods</li> <li><code>kubectl get services</code> \u2014 List services</li> <li><code>kubectl get deployments</code> \u2014 List deployments</li> <li><code>kubectl get nodes</code> \u2014 List nodes</li> <li><code>kubectl get namespaces</code> \u2014 List namespaces</li> </ul>"},{"location":"kubernetes/kubectl/#describe-resources","title":"Describe Resources","text":"<ul> <li><code>kubectl describe pod &lt;pod-name&gt;</code></li> <li><code>kubectl describe node &lt;node-name&gt;</code></li> <li><code>kubectl describe deployment &lt;deployment-name&gt;</code></li> </ul>"},{"location":"kubernetes/kubectl/#logs-and-exec","title":"Logs and Exec","text":"<ul> <li><code>kubectl logs &lt;pod-name&gt;</code> \u2014 View logs of a pod</li> <li><code>kubectl exec -it &lt;pod-name&gt; -- /bin/bash</code> \u2014 Exec into a pod shell</li> </ul>"},{"location":"kubernetes/kubectl/#apply-and-delete","title":"Apply and Delete","text":"<ul> <li><code>kubectl apply -f &lt;file.yaml&gt;</code> \u2014 Apply config from file</li> <li><code>kubectl delete -f &lt;file.yaml&gt;</code> \u2014 Delete resources from file</li> </ul>"},{"location":"kubernetes/kubectl/#scaling-and-updating","title":"Scaling and Updating","text":"<ul> <li><code>kubectl scale deployment &lt;name&gt; --replicas=&lt;num&gt;</code> \u2014 Scale deployment</li> <li><code>kubectl rollout status deployment/&lt;name&gt;</code> \u2014 Check rollout status</li> <li><code>kubectl rollout undo deployment/&lt;name&gt;</code> \u2014 Rollback deployment</li> </ul>"},{"location":"kubernetes/kubectl/#miscellaneous","title":"Miscellaneous","text":"<ul> <li><code>kubectl config view</code> \u2014 Show kubeconfig</li> <li><code>kubectl config use-context &lt;context-name&gt;</code> \u2014 Switch context</li> <li><code>kubectl top pod</code> \u2014 Show pod resource usage (if metrics-server installed)  </li> </ul>"},{"location":"kubernetes/minikube/","title":"Minikube Usage &amp; Basic Commands","text":"<p>Minikube is a tool that makes it easy to run Kubernetes locally. Below are some commonly used Minikube commands with brief explanations.</p>"},{"location":"kubernetes/minikube/#installing-minikube","title":"Installing Minikube","text":"<pre><code>brew install minikube\n</code></pre> <ul> <li>Installs Minikube on macOS using Homebrew.</li> </ul>"},{"location":"kubernetes/minikube/#starting-minikube","title":"Starting Minikube","text":"<pre><code>minikube start --driver=docker\n</code></pre> <ul> <li>Starts a Minikube cluster using the Docker driver.</li> </ul>"},{"location":"kubernetes/minikube/#checking-minikube-status","title":"Checking Minikube Status","text":"<pre><code>minikube status\n</code></pre> <ul> <li>Shows the current status of the Minikube cluster.</li> </ul>"},{"location":"kubernetes/minikube/#stopping-minikube","title":"Stopping Minikube","text":"<pre><code>minikube stop\n</code></pre> <ul> <li>Stops the running Minikube cluster without deleting it.</li> </ul>"},{"location":"kubernetes/minikube/#deleting-minikube","title":"Deleting Minikube","text":"<pre><code>minikube delete\n</code></pre> <ul> <li>Deletes the Minikube cluster and all its data.</li> </ul>"},{"location":"kubernetes/minikube/#creating-a-service-url-in-minikube","title":"Creating a service url in Minikube","text":"<pre><code>minikube service --url &lt;service-name&gt;\n</code></pre> <ul> <li>Starts a service in Minikube and provides the URL to access it. (e.g. http://127.0.0.1:33901)</li> </ul>"},{"location":"kubernetes/minikube/#summary","title":"Summary","text":"Command Description <code>brew install minikube</code> Install Minikube <code>minikube start --driver=docker</code> Start Minikube with Docker driver <code>minikube status</code> Check the status of Minikube <code>minikube stop</code> Stop the Minikube cluster <code>minikube delete</code> Delete the Minikube cluster <code>minikube service --url &lt;service-name&gt;</code> Create a service url <p>For more details, visit the official documentation: https://minikube.sigs.k8s.io/docs/</p> <p>Note: Docker must be installed and running on your machine to use Minikube with the Docker driver.</p>"},{"location":"linux/linux-cheatsheet/","title":"Linux Commands","text":"<p>This document lists some of the most commonly used Linux commands by developers, with descriptions and usage examples.</p>"},{"location":"linux/linux-cheatsheet/#watch","title":"watch","text":"<p>Runs a command repeatedly, showing its output and errors. Useful for monitoring changes in real time.</p> <p>Usage: <code>watch ls -l</code></p> <p><code>watch -n 5 ls -l</code></p>"},{"location":"linux/linux-cheatsheet/#grep","title":"grep","text":"<p>Searches for a pattern within files or input.</p> <p>Usage: <code>grep \"error\" /var/log/syslog</code></p>"},{"location":"linux/linux-cheatsheet/#tail","title":"tail","text":"<p>Shows the last part of a file.</p> <p>Usage: <code>tail -f /var/log/syslog</code></p>"},{"location":"linux/linux-cheatsheet/#ps","title":"ps","text":"<p>Displays information about running processes.</p> <p>Usage: <code>ps -u $(whoami)</code></p>"},{"location":"linux/linux-cheatsheet/#top","title":"top","text":"<p>Interactive process viewer showing system resource usage.</p> <p>Usage: <code>top</code></p>"},{"location":"linux/linux-cheatsheet/#htop","title":"htop","text":"<p>An enhanced, interactive process viewer (must be installed separately).</p> <p>Usage: <code>htop</code></p>"},{"location":"linux/linux-cheatsheet/#chmod","title":"chmod","text":"<p>Changes file permissions.</p> <p>Usage: <code>chmod +x script.sh</code></p>"},{"location":"linux/linux-cheatsheet/#chown","title":"chown","text":"<p>Changes file owner and group.</p> <p>Usage: <code>chown user:group file.txt</code></p>"},{"location":"linux/linux-cheatsheet/#ssh","title":"ssh","text":"<p>Secure shell for logging into a remote machine.</p> <p>Usage: <code>ssh user@host</code></p>"},{"location":"linux/linux-cheatsheet/#scp","title":"scp","text":"<p>Securely copies files between hosts.</p> <p>Usage: <code>scp file.txt user@remote:/path/to/destination</code></p>"},{"location":"linux/linux-cheatsheet/#rsync","title":"rsync","text":"<p>Efficiently syncs files/directories between locations.</p> <p>Usage: <code>rsync -avz /local/dir user@remote:/remote/dir</code></p>"},{"location":"linux/linux-cheatsheet/#df","title":"df","text":"<p>Shows disk space usage.</p> <p>Usage: <code>df -h</code></p>"},{"location":"linux/linux-cheatsheet/#du","title":"du","text":"<p>Shows disk usage of files and directories.</p> <p>Usage: <code>du -h --max-depth=1</code></p>"},{"location":"linux/linux-cheatsheet/#find","title":"find","text":"<p>Searches for files and directories matching criteria.</p> <p>Usage: <code>find . -name \"*.log\"</code></p>"},{"location":"linux/linux-cheatsheet/#sed","title":"sed","text":"<p>Stream editor for filtering and transforming text.</p> <p>Usage: <code>sed 's/old/new/g' file.txt</code></p>"},{"location":"linux/linux-cheatsheet/#awk","title":"awk","text":"<p>Powerful text processing and pattern scanning language.</p> <p>Usage: <code>awk '{print $1}' file.txt</code></p>"},{"location":"linux/linux-cheatsheet/#tar","title":"tar","text":"<p>Archives and extracts files.</p> <p>Usage: - Create archive: <code>tar -cvf archive.tar folder/</code> - Extract archive: <code>tar -xvf archive.tar</code></p>"},{"location":"linux/linux-cheatsheet/#zip-unzip","title":"zip / unzip","text":"<p>Compress and decompress files.</p> <p>Usage: <code>zip archive.zip file1 file2</code> <code>unzip archive.zip</code></p>"},{"location":"linux/linux-cheatsheet/#systemctl","title":"systemctl","text":"<p>Controls systemd system and service manager.</p> <p>Usage: <code>systemctl status nginx</code> <code>systemctl restart nginx</code></p>"},{"location":"linux/linux-cheatsheet/#journalctl","title":"journalctl","text":"<p>Views systemd logs.</p> <p>Usage: <code>journalctl -u nginx.service</code></p>"},{"location":"linux/linux-cheatsheet/#whoami","title":"whoami","text":"<p>Shows current logged in user.</p> <p>Usage: <code>whoami</code></p>"},{"location":"linux/linux-cheatsheet/#history","title":"history","text":"<p>Shows command history.</p> <p>Usage: <code>history</code></p>"},{"location":"linux/linux-cheatsheet/#clear","title":"clear","text":"<p>Clears the terminal screen.</p> <p>Usage: <code>clear</code></p>"},{"location":"linux/linux-cheatsheet/#env","title":"env","text":"<p>Shows environment variables.</p> <p>Usage: <code>env</code></p>"},{"location":"linux/linux-cheatsheet/#export","title":"export","text":"<p>Sets environment variables.</p> <p>Usage: <code>export PATH=$PATH:/new/path</code></p>"},{"location":"linux/linux-cheatsheet/#alias","title":"alias","text":"<p>Creates command shortcuts.</p> <p>Usage: <code>alias ll='ls -la'</code></p>"},{"location":"linux/linux-cheatsheet/#kill","title":"kill","text":"<p>Terminates processes by PID.</p> <p>Usage: <code>kill 1234</code></p>"},{"location":"linux/linux-cheatsheet/#pkill","title":"pkill","text":"<p>Kills processes by name.</p> <p>Usage: <code>pkill nginx</code></p>"},{"location":"linux/linux-cheatsheet/#sleep","title":"sleep","text":"<p>Pauses execution for specified seconds.</p> <p>Usage: <code>sleep 5</code></p>"},{"location":"linux/linux-cheatsheet/#date","title":"date","text":"<p>Shows or sets the system date/time.</p> <p>Usage: <code>date</code></p>"},{"location":"linux/linux-cheatsheet/#printenv","title":"printenv","text":"<p>Displays the current environment variables.</p> <p>Usage: <code>printenv</code></p>"},{"location":"linux/linux-cheatsheet/#pwd","title":"pwd","text":"<p><code>pwd</code> (Print Working Directory) displays the current directory you are in within the terminal.</p> <p>Usage: <code>pwd</code></p>"},{"location":"linux/linux-cheatsheet/#arch","title":"arch","text":"<p><code>arch</code> prints the architecture of the machine you are currently using.</p> <p>Usage: <code>arch</code></p> <p>Example output: <code>x86_64</code> or <code>arm64</code></p>"},{"location":"linux/linux-cheatsheet/#uname","title":"uname","text":"<p>Displays system information.</p> <p>Usage: <code>uname -a</code></p> <p><code>uname -m</code> # Displays machine hardware name like <code>x86_64</code> or <code>arm64</code></p>"},{"location":"linux/linux-cheatsheet/#which","title":"which","text":"<p><code>which</code> shows the full path of the executable that would run when you type the command.</p> <p>Usage: <code>which brew</code></p> <p>Example output: <code>/usr/local/bin/brew</code></p>"},{"location":"linux/linux-cheatsheet/#notes","title":"Notes","text":"<ul> <li>Most commands support many options and flags; check their man pages (e.g., <code>man grep</code>) for details.</li> <li>Some tools like <code>htop</code> or <code>rsync</code> may require installation depending on your Linux distro.</li> </ul>"},{"location":"linux/linux-network-cheatsheet/","title":"Linux Network Commands","text":"<p>This document lists some of the most commonly used Linux network commands by developers, with descriptions and usage examples.</p>"},{"location":"linux/linux-network-cheatsheet/#hostname","title":"hostname","text":"<p>Shows or sets the system's hostname.</p> <p>Usage: <code>hostname</code></p>"},{"location":"linux/linux-network-cheatsheet/#nslookup","title":"nslookup","text":"<p>Queries DNS servers to obtain domain name or IP address mapping.</p> <p>Usage: <code>nslookup example.com</code></p>"},{"location":"linux/linux-network-cheatsheet/#dig","title":"dig","text":"<p>DNS lookup utility, more flexible than nslookup. This command is very useful for debugging DNS issues and checking DNS propagation.</p> <p>Usage: <code>dig example.com</code></p> <p><code>dig example.com @111.11.11.11</code> # Querying a specific DNS server</p>"},{"location":"linux/linux-network-cheatsheet/#ifconfig","title":"ifconfig","text":"<p>Displays or configures network interfaces (deprecated in favor of <code>ip</code> command).</p> <p>Usage: <code>ifconfig</code></p>"},{"location":"linux/linux-network-cheatsheet/#wget","title":"wget","text":"<p>Non-interactive network downloader, useful for downloading files from the web.</p> <p>Usage: <code>wget https://example.com/file.zip</code></p>"},{"location":"linux/linux-network-cheatsheet/#ping","title":"ping","text":"<p>Sends ICMP echo requests to test network connectivity to a host.</p> <p>Usage: <code>ping google.com</code></p>"},{"location":"linux/linux-network-cheatsheet/#curl","title":"curl","text":"<p>Transfers data from or to a server, supporting multiple protocols.</p> <p>Usage: <code>curl https://example.com</code></p>"},{"location":"linux/linux-network-cheatsheet/#ip","title":"ip","text":"<p>Modern tool to show/manipulate routing, devices, policy routing, and tunnels.</p> <p>Usage: <code>ip addr show</code></p>"},{"location":"linux/linux-network-cheatsheet/#traceroute","title":"traceroute","text":"<p>Shows the path packets take to reach a host.</p> <p>Usage: <code>traceroute google.com</code></p>"},{"location":"linux/linux-network-cheatsheet/#netstat","title":"netstat","text":"<p>Displays network connections, routing tables, interface statistics, etc.</p> <p>Usage: <code>netstat -tuln</code></p>"},{"location":"maven/maven-wrapper/","title":"Apache Maven Wrapper","text":"<p>The Maven Wrapper has officially been released by the Apache Maven Project!</p>"},{"location":"maven/maven-wrapper/#what-is-maven-wrapper","title":"What is Maven Wrapper?","text":"<p>Maven Wrapper allows you to automatically download and use a specific version of Maven for your project without requiring users to install Maven manually on their machines.</p>"},{"location":"maven/maven-wrapper/#resources","title":"Resources","text":"<ul> <li>GitHub Repository: apache/maven-wrapper</li> <li>Official Site: maven.apache.org/wrapper</li> <li>JIRA Issues: MWRAPPER project issues</li> </ul>"},{"location":"maven/maven-wrapper/#how-to-use","title":"How to Use","text":"<p>Run the following command in the root directory of your Maven project to add the Maven Wrapper scripts:</p> <pre><code>mvn wrapper:wrapper\n</code></pre>"},{"location":"maven/maven-wrapper/#using-a-specific-maven-version","title":"Using a Specific Maven Version","text":"<p>To generate wrapper files for a specific Maven version (e.g., Maven 3.9.5), run:</p> <pre><code>mvn wrapper:wrapper -Dmaven=3.9.5\n</code></pre> <p>This will ensure everyone working on the project uses the specified Maven version.</p>"},{"location":"maven/maven-wrapper/#benefits","title":"Benefits","text":"<ul> <li>No need to install Maven globally</li> <li>Consistent Maven version across all environments</li> <li>Simplifies build setup for new developers</li> </ul> <p>For more details, check the official Maven Wrapper documentation.</p>"},{"location":"mobile/android/android-firebase-integration/","title":"Android Firebase Integration","text":"<p>This document describes the basic configuration required to connect an Android application to Firebase. Completing this integration allows you to use services such as Push Notifications, Crashlytics, and Analytics.</p>"},{"location":"mobile/android/android-firebase-integration/#prerequisites","title":"\ud83d\udccb Prerequisites","text":"Requirement Description Notes \u2705 Firebase Account Firebase Console Ensure you have access or invitation from an admin. \u2705 Android Studio Development environment where Firebase SDK will be integrated \u2705 Android Project The Android app project to be connected to Firebase"},{"location":"mobile/android/android-firebase-integration/#1-creating-a-firebase-project","title":"\ud83d\udd27 1. Creating a Firebase Project","text":"<ol> <li>Go to Firebase Console.</li> <li>Click Add project.</li> <li>Enter a project name and optionally enable Google Analytics.</li> <li>Complete the project creation process.</li> </ol>"},{"location":"mobile/android/android-firebase-integration/#2-adding-an-android-app-to-firebase","title":"\ud83e\udde9 2. Adding an Android App to Firebase","text":"<ol> <li>Open your Firebase project.</li> <li>Click the Android icon to add an app.</li> <li>Fill in the required info:<ul> <li>Android package name (e.g., <code>com.example.myapp</code>)</li> <li>App nickname (optional) (e.g., <code>MyApp - Android Internal App</code>)</li> <li>Debug signing certificate SHA-1 (optional, can be retrieved via Android Studio)</li> </ul> </li> <li>Click Register app.</li> <li>Download the <code>google-services.json</code> file.</li> </ol>"},{"location":"mobile/android/android-firebase-integration/#3-adding-google-servicesjson-to-your-project","title":"\ud83d\udce5 3. Adding <code>google-services.json</code> to Your Project","text":"<p>Place the downloaded <code>google-services.json</code> file into your Android app folder: <code>YourProject/app/google-services.json</code></p> <p>This file enables the Firebase SDK to configure the app.</p>"},{"location":"mobile/android/android-firebase-integration/#4-firebase-sdk-setup","title":"\u2699\ufe0f 4. Firebase SDK Setup","text":"<ul> <li>In project-level <code>build.gradle</code> (usually <code>build.gradle (Project: your-app)</code>):</li> </ul> <pre><code>buildscript {\n  dependencies {\n    classpath 'com.google.gms:google-services:4.4.0'\n  }\n}\n</code></pre> <ul> <li>In app-level <code>build.gradle</code> (usually <code>build.gradle (Module: app)</code>):</li> </ul> <pre><code>plugins {\n  id 'com.android.application'\n  id 'com.google.gms.google-services' // add at the bottom\n}\n\ndependencies {\n  implementation 'com.google.firebase:firebase-analytics:21.6.1'\n  // Optional Firebase modules:\n  implementation 'com.google.firebase:firebase-messaging:23.4.1' // for push notifications\n}\n</code></pre>"},{"location":"mobile/android/android-firebase-integration/#5-starting-firebase-sdk","title":"\ud83d\ude80 5. Starting Firebase SDK","text":"<p>Firebase initializes automatically with <code>google-services.json</code> and the Google services plugin.</p> <p>If you want manual initialization, do it in your <code>Application</code> subclass:</p> <pre><code>class BaseApplication : Application() {\n  override fun onCreate() {\n    super.onCreate()\n    FirebaseApp.initializeApp(this)\n  }\n}\n</code></pre> <p>And add to your <code>AndroidManifest.xml</code>:</p> <pre><code>\n&lt;application\n    android:name=\".BaseApplication\"\n    ... &gt;\n</code></pre>"},{"location":"mobile/android/android-google-maps-integration/","title":"Android Google Maps Integration","text":"<p>This document provides step-by-step instructions to add Google Maps integration to an Android application.</p>"},{"location":"mobile/android/android-google-maps-integration/#1-google-cloud-console-setup","title":"1. \ud83d\udd11 Google Cloud Console Setup","text":""},{"location":"mobile/android/android-google-maps-integration/#11-create-or-select-project","title":"1.1 Create or Select Project","text":"<ul> <li>Log in to Google Cloud Console.</li> <li>Create a new project or select an existing one.</li> <li>For permissions, coordinate with an authorized team member.</li> </ul>"},{"location":"mobile/android/android-google-maps-integration/#12-enable-apis","title":"1.2 Enable APIs","text":"<p>Enable the following APIs:</p> <ul> <li>\u2705 Maps SDK for Android (for maps)</li> <li>\u2705 Places API (for local search/autocomplete)</li> </ul> <p>Note: Enable any additional APIs your app requires.</p>"},{"location":"mobile/android/android-google-maps-integration/#13-create-api-key","title":"1.3 Create API Key","text":"<ul> <li>Navigate to API &amp; Services &gt; Credentials.</li> <li>Create a new API Key.</li> <li>Name the key appropriately (e.g., \"App Internal - Android Maps Key\").</li> <li> <p>Apply restrictions as follows:</p> <ul> <li> <p>Application Restrictions:</p> <ul> <li>Android apps</li> <li>Package name: <code>com.example.app.internal</code></li> <li>SHA-1 Certificate fingerprint: (from keystore, explained below)</li> </ul> </li> <li> <p>API Restrictions:</p> <ul> <li>Allow access only to:<ul> <li>Maps SDK for Android</li> <li>Places API</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"mobile/android/android-google-maps-integration/#2-obtain-keystore-sha-1-fingerprint","title":"2. \ud83d\udd10 Obtain Keystore SHA-1 Fingerprint","text":"<ul> <li>Follow instructions for Android Keystore Settings for generating a keystore and   obtaining SHA-1 fingerprint in   your Android Studio project.</li> <li>Alternatively, run the following command:</li> </ul> <p><code>./gradlew signingReport</code></p> <ul> <li>Use the SHA-1 value shown under the release or debug variant in Google Cloud Console.</li> <li>It is recommended to register both debug (internal) and release (production) SHA-1 fingerprints.</li> </ul>"},{"location":"mobile/android/android-google-maps-integration/#3-android-studio-configuration","title":"3. \ud83e\udde9 Android Studio Configuration","text":""},{"location":"mobile/android/android-google-maps-integration/#31-buildgradle-setup","title":"3.1 build.gradle Setup","text":"<p>Project-level build.gradle:</p> <pre><code>allprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n</code></pre> <p>App-level build.gradle:</p> <pre><code>dependencies {\n    implementation 'com.google.android.gms:play-services-maps:18.2.0'\n    implementation 'com.google.android.libraries.places:places:3.4.0'\n}\n</code></pre>"},{"location":"mobile/android/android-google-maps-integration/#32-androidmanifestxml-setup","title":"3.2 AndroidManifest.xml Setup","text":"<pre><code>&lt;manifest&gt;\n    &lt;application&gt;\n        &lt;meta-data\n            android:name=\"com.google.android.geo.API_KEY\"\n            android:value=\"@string/google_maps_key\" /&gt;\n    &lt;/application&gt;\n\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n&lt;/manifest&gt;\n</code></pre>"},{"location":"mobile/android/android-google-maps-integration/#33-add-api-key","title":"3.3 Add API Key","text":"<p>Add the <code>google_maps_key</code> in your <code>res/values/strings.xml</code> file:</p> <pre><code>&lt;string name=\"google_maps_key\"&gt;YOUR_API_KEY&lt;/string&gt;\n</code></pre> <p>You can define different keys for different build flavors or environments if needed.</p>"},{"location":"mobile/android/android-google-maps-integration/#4-testing-debugging","title":"4. \ud83e\uddea Testing &amp; Debugging","text":"<p>Test the following features inside your app:</p> <ul> <li>Does the map load correctly?</li> <li>Are pins placed correctly on the map?</li> <li>Are location permissions requested and handled properly?</li> <li>Does Places API autocomplete return results as expected?</li> <li>Can addresses be added via the map?</li> </ul> <p>If you encounter errors in Logcat, check:</p> <ul> <li>Is the API key correct?</li> <li>Is the SHA-1 fingerprint registered properly?</li> <li>Are necessary permissions granted?</li> <li>Are APIs enabled in Google Cloud Console?</li> </ul>"},{"location":"mobile/android/android-google-maps-integration/#notes","title":"\ud83d\udcdd Notes","text":"<ul> <li>Google Maps API is paid beyond a free monthly quota ($200).</li> <li>Autocomplete API can be queried frequently; consider throttling if needed.</li> <li>If map does not load in release build, verify the SHA-1 fingerprint matches the release keystore.</li> </ul>"},{"location":"mobile/android/android-keystore-settings/","title":"Android Keystore Settings","text":"<p>This document explains the steps to create, configure, and encrypt sensitive files such as <code>.keystore</code> and <code>release.properties</code> in an Android project.</p>"},{"location":"mobile/android/android-keystore-settings/#1-creating-keystore-files","title":"1. \ud83d\udd10 Creating .keystore Files","text":"<ul> <li>In Android Studio, go to Build &gt; Generate Signed Bundle / APK.</li> <li>Select Android App Bundle \u2192 Click Next.</li> <li>Click Create new....</li> <li>Fill in the fields as follows:</li> </ul> Field Example Value Keystore path <code>.keystore/appinternal.keystore</code> Password <code>123456</code> (example only) Alias <code>appinternalkeystore</code> Key password <code>123456</code> (example only) Validity (years) 25 <ul> <li>Repeat the above process for a production keystore (e.g. <code>.keystore/app.keystore</code>).</li> </ul>"},{"location":"mobile/android/android-keystore-settings/#keystore-folder-structure","title":"Keystore Folder Structure","text":"<p>The <code>.keystore/</code> folder should be placed at the project root and contain the keystore files.</p> Environment File Name Description Debug <code>appinternal.keystore</code> For development signing Release <code>app.keystore</code> For production signing"},{"location":"mobile/android/android-keystore-settings/#2-releaseproperties-file","title":"2. \ud83e\uddfe release.properties File","text":"<p>This file is read by Gradle for signing information and stores keystore properties:</p> <p>Example <code>release.properties</code> content:</p> <pre><code>APP_KEYSTORE_PASSWORD=123456\nAPP_ALIAS_PASSWORD=appinternalkeystore\nAPP_KEY_PASSWORD=123456\n</code></pre> <ul> <li>This file can also be named <code>keystore.properties</code>.</li> <li>Allows managing separate credentials for debug and release builds.</li> <li>Important: This file must be included in <code>.gitignore</code> to avoid committing sensitive data.</li> </ul> <pre><code>release.properties\n</code></pre>"},{"location":"mobile/android/android-keystore-settings/#3-obtaining-keystore-sha-1-fingerprint","title":"3. \ud83d\udd10 Obtaining Keystore SHA-1 Fingerprint","text":"<p>Run this command to get SHA-1, SHA-256, and certificate details:</p> <pre><code>keytool -list -v -keystore .keystore/appinternal.keystore -alias appinternalkeystore\n</code></pre> <ul> <li>Enter the keystore password when prompted (e.g., <code>123456</code>).</li> <li>The output includes certificate fingerprints required for services like Google Cloud Console.</li> </ul>"},{"location":"mobile/android/android-keystore-settings/#4-encrypting-the-properties-file-releasepropertiesgpg","title":"4. \ud83d\udd10 Encrypting the Properties File (<code>release.properties.gpg</code>)","text":"<p>From the project root, run:</p> <pre><code>gpg --symmetric --cipher-algo AES256 release.properties\n</code></pre> <ul> <li>You will be prompted for a passphrase (example: <code>123456</code>).</li> <li>This generates <code>release.properties.gpg</code>.</li> <li>The original <code>release.properties</code> should be deleted or kept in <code>.gitignore</code>.</li> <li>If <code>gpg</code> is not installed, install it via package manager (e.g., <code>brew install gnupg</code> on macOS).</li> </ul>"},{"location":"mobile/android/android-keystore-settings/#5-decrypting-the-encrypted-file","title":"5. \ud83d\udd13 Decrypting the Encrypted File","text":"<p>To decrypt <code>release.properties.gpg</code> on another machine or CI/CD:</p> <pre><code>gpg --output release.properties --decrypt release.properties.gpg\n</code></pre>"},{"location":"mobile/android/android-keystore-settings/#6-gradle-signingconfig-setup","title":"6. \u2705 Gradle SigningConfig Setup","text":"<p>In your app-level <code>build.gradle</code>:</p> <pre><code>    android {\n        signingConfigs {\n            debug {\n                storeFile = rootProject.file(\".keystore/appinternal.keystore\")\n                storePassword = \"123456\"\n                keyAlias = \"appinternalkeystore\"\n                keyPassword = \"123456\"\n            }\n            release {\n                storeFile = rootProject.file(\".keystore/app.keystore\")\n                storePassword = releaseProperties.getProperty(\"APP_KEYSTORE_PASSWORD\")\n                keyAlias = releaseProperties.getProperty(\"APP_ALIAS_PASSWORD\")\n                keyPassword = releaseProperties.getProperty(\"APP_KEY_PASSWORD\")\n            }\n        }\n\n        buildTypes {\n            debug {\n                signingConfig signingConfigs.debug\n            }\n            release {\n                signingConfig signingConfigs.release\n            }\n        }\n    }\n</code></pre> <ul> <li><code>releaseProperties</code> is loaded from the decrypted <code>release.properties</code> file, which is not committed to Git.</li> </ul>"},{"location":"mobile/android/android-keystore-settings/#7-usage-in-cicd-environment","title":"7. \u2705 Usage in CI/CD Environment","text":"<ul> <li>The <code>.gpg</code> encrypted file can be committed to the repository.</li> <li>During the CI/CD pipeline, decrypt it securely.</li> <li>Store the decryption passphrase as an environment secret (e.g., <code>RELEASE_FILE_PASSPHRASE</code>).</li> <li>Avoid hardcoding passwords.</li> <li>Use the same password for keystore and <code>.gpg</code> for simplicity.</li> </ul>"},{"location":"mobile/android/android-keystore-settings/#8-security-notes","title":"8. \ud83d\uded1 Security Notes","text":"<ul> <li>Never commit <code>.properties</code> files containing sensitive data to Git.</li> <li>Encrypted <code>.gpg</code> files can be version controlled but must be protected.</li> <li>On shared machines, delete decrypted files immediately after use.</li> </ul>"},{"location":"mobile/android/android-push-notification-integration/","title":"Android Push Notification Integration","text":"<p>This guide explains how to set up and integrate push notifications into an Android application using Firebase Cloud Messaging (FCM). It covers creating a Firebase project, adding the <code>google-services.json</code> file, configuring Android project files, and testing the notifications.</p> <p>Goal: Enable delivery of push notifications to Android devices via Firebase.</p>"},{"location":"mobile/android/android-push-notification-integration/#prerequisites","title":"\ud83d\udccb Prerequisites","text":"Requirement Description \u2705 Firebase Project Create one at Firebase Console \u2705 Android App Written in Kotlin or Java, with access to AndroidManifest and build.gradle files \u2705 Physical Device Recommended for push testing (emulators may work but physical devices ensure accuracy)"},{"location":"mobile/android/android-push-notification-integration/#1-firebase-setup","title":"\ud83e\udde9 1. Firebase Setup","text":"<p>Follow the steps in the document below to create a Firebase project and add the <code>google-services.json</code> file to your project:</p> <p>Android Firebase Integration</p>"},{"location":"mobile/android/android-push-notification-integration/#2-firebase-sdk-and-push-notification-setup","title":"\u2699\ufe0f 2. Firebase SDK and Push Notification Setup","text":"<p>\ud83d\udd27 build.gradle (Project-level)</p> <pre><code>buildscript {\n  dependencies {\n    classpath 'com.google.gms:google-services:4.4.0' // Keep the version updated  \n  }\n}\n</code></pre> <p>\ud83d\udd27 build.gradle (App-level)</p> <pre><code>plugins {\n  id 'com.android.application'\n  id 'com.google.gms.google-services' // Make sure this is added at the bottom  \n}\n\ndependencies {\n  implementation platform('com.google.firebase:firebase-bom:32.7.0') // Version BOM  \n  implementation 'com.google.firebase:firebase-messaging'\n}\n</code></pre>"},{"location":"mobile/android/android-push-notification-integration/#3-initializing-firebase-and-retrieving-token","title":"\ud83d\ude80 3. Initializing Firebase and Retrieving Token","text":"<p>\ud83d\udcdd MyFirebaseMessagingService.kt</p> <pre><code>class MyFirebaseMessagingService : FirebaseMessagingService() {\n\n  override fun onNewToken(token: String) {\n    super.onNewToken(token)\n    Log.d(\"FCM\", \"FCM Token: $token\")\n    // TODO: Send token to backend server for push targeting  \n  }\n\n  override fun onMessageReceived(remoteMessage: RemoteMessage) {\n    super.onMessageReceived(remoteMessage)\n\n    val notification = remoteMessage.notification\n    notification?.let {\n      Log.d(\"FCM\", \"Notification: ${it.title} - ${it.body}\")\n    }\n  }\n}\n</code></pre> <p>\ud83d\udcdd AndroidManifest.xml</p> <pre><code>\n&lt;service\n    android:name=\".MyFirebaseMessagingService\"\n    android:exported=\"false\"&gt;\n  &lt;intent-filter&gt;\n    &lt;action android:name=\"com.google.firebase.MESSAGING_EVENT\"/&gt;\n  &lt;/intent-filter&gt;\n&lt;/service&gt;\n\n&lt;uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\"/&gt;  \n</code></pre> <p>\u2705 For Android 13+ devices, runtime permission for notifications must be requested.</p>"},{"location":"mobile/android/android-push-notification-integration/#4-android-13-notification-permission-recommended","title":"\ud83d\udd14 4. Android 13+ Notification Permission (Recommended)","text":"<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.TIRAMISU) {\n  ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.POST_NOTIFICATIONS), 1001)\n}\n</code></pre>"},{"location":"mobile/android/android-push-notification-integration/#5-testing-push-notifications-from-firebase","title":"\ud83d\ude80 5. Testing Push Notifications from Firebase","text":"<ol> <li>Open Firebase Console &gt; Cloud Messaging &gt; Send your first message.</li> <li>Enter a title and message.</li> <li>Click Test on device.</li> <li>Enter the device token (retrieved from app logs).</li> <li>Click Send Test Message.</li> <li>\u2705 The notification should appear on the device.</li> </ol>"},{"location":"mobile/android/android-push-notification-integration/#notes-and-tips","title":"\ud83e\udde0 Notes and Tips","text":"<ul> <li>Do not share your <code>google-services.json</code> file publicly \u2014 it contains sensitive credentials.</li> <li>The app\u2019s package name in Firebase must match your app\u2019s actual package name.</li> <li>If required, add your SHA-1 key to the Firebase project for authentication.</li> <li>To successfully receive push notifications:<ul> <li>The notification permission must be granted.</li> <li>The device must be connected to the internet.</li> <li>The FCM token must be sent to your backend correctly.</li> </ul> </li> </ul>"},{"location":"mobile/ios/ios-firebase-integration/","title":"iOS Firebase Integration","text":"<p>This document outlines the basic setup required to connect an iOS application to Firebase. This integration enables services such as Push Notifications, Crashlytics, and Analytics.</p>"},{"location":"mobile/ios/ios-firebase-integration/#prerequisites","title":"\ud83d\udccb Prerequisites","text":"Requirement Description \u2705 Firebase Account Create or access via Firebase Console \u2705 iOS App in Xcode An existing iOS project created in Xcode"},{"location":"mobile/ios/ios-firebase-integration/#1-create-a-firebase-project","title":"\ud83d\udd27 1. Create a Firebase Project","text":"<ol> <li>Go to Firebase Console.</li> <li>Click \"Add project\".</li> <li>Enter a project name \u2192 Enable Google Analytics (optional).</li> <li>Complete the project creation process.</li> </ol>"},{"location":"mobile/ios/ios-firebase-integration/#2-add-your-ios-app-to-firebase","title":"\ud83e\udde9 2. Add Your iOS App to Firebase","text":"<ol> <li>Open your Firebase project in the console.</li> <li>In the Project Overview, click the iOS icon.</li> <li>Fill in the following:<ul> <li>iOS Bundle ID: Must exactly match the bundle ID in your Xcode project (e.g., <code>com.example.myapp</code>).</li> <li>App nickname: (Optional) A display name for your app. (e.g., <code>MyApp - iOS Internal App</code>)</li> <li>App Store ID: Leave blank if not applicable.</li> </ul> </li> <li>Click Register app.</li> <li>Download the GoogleService-Info.plist file.</li> </ol>"},{"location":"mobile/ios/ios-firebase-integration/#3-add-googleservice-infoplist-to-your-project","title":"\ud83d\udce5 3. Add <code>GoogleService-Info.plist</code> to Your Project","text":"<ol> <li>Drag the downloaded <code>GoogleService-Info.plist</code> file into your Xcode project.</li> <li>In the popup:<ul> <li>\u2705 Check \"Copy items if needed\".</li> <li>\u2705 Ensure your main app target is selected in Add to targets.</li> </ul> </li> </ol> <p>This file is required for the Firebase SDK to load your app configuration.</p>"},{"location":"mobile/ios/ios-firebase-integration/#4-install-firebase-sdk","title":"\u2699\ufe0f 4. Install Firebase SDK","text":"<p>Using Swift Package Manager (Recommended):</p> <ol> <li>In Xcode, go to File &gt; Add Packages.</li> <li> <p>Enter the URL: https://github.com/firebase/firebase-ios-sdk</p> </li> <li> <p>Select the modules you need:</p> </li> <li> <p><code>FirebaseAnalytics</code></p> </li> <li><code>FirebaseMessaging</code> (for push notifications)</li> <li><code>FirebaseCrashlytics</code>, <code>FirebaseAuth</code>, etc., as needed.</li> </ol>"},{"location":"mobile/ios/ios-firebase-integration/#5-initialize-firebase-sdk","title":"\ud83d\ude80 5. Initialize Firebase SDK","text":"<p>AppDelegate.swift:</p> <pre><code>import Firebase\n\nfunc application(_ application: UIApplication,\n                 didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool {\n  FirebaseApp.configure()\n  return true\n}\n</code></pre>"},{"location":"mobile/ios/ios-google-maps-integration/","title":"iOS Google Maps Integration","text":"<p>This document explains step-by-step how to integrate Google Maps into an iOS application.</p>"},{"location":"mobile/ios/ios-google-maps-integration/#1-google-cloud-console-setup","title":"1. \ud83d\udd11 Google Cloud Console Setup","text":""},{"location":"mobile/ios/ios-google-maps-integration/#11-create-or-select-project","title":"1.1 Create or Select Project","text":"<ul> <li>Log in to Google Cloud Console.</li> <li>Create a new project or select an existing one.</li> <li>For permissions, coordinate with an authorized team member.</li> </ul>"},{"location":"mobile/ios/ios-google-maps-integration/#12-enable-apis","title":"1.2 Enable APIs","text":"<p>Enable the following APIs for your project:</p> <ul> <li>\u2705 Maps SDK for iOS (for maps)</li> <li>\u2705 Places API (for local search/autocomplete)</li> <li>\u2705 Places SDK for iOS</li> </ul> <p>Note: Enable any additional APIs depending on the services your app uses.</p>"},{"location":"mobile/ios/ios-google-maps-integration/#13-create-api-key","title":"1.3 Create API Key","text":"<ul> <li>Navigate to API &amp; Services &gt; Credentials.</li> <li>Create a new API key.</li> <li>Give it a descriptive name (e.g., <code>MyApp iOS Maps Key</code>).</li> </ul> <p>Apply restrictions:</p> <ul> <li> <p>Application Restrictions:</p> <ul> <li>iOS apps</li> <li>Bundle ID: Your app\u2019s exact bundle ID (e.g., <code>com.example.myapp</code>)</li> </ul> </li> <li> <p>API Restrictions:</p> <ul> <li>Allow access only to:<ul> <li>Maps SDK for iOS</li> <li>Places API</li> <li>Places SDK for iOS</li> </ul> </li> </ul> </li> </ul>"},{"location":"mobile/ios/ios-google-maps-integration/#2-xcode-setup","title":"2. \ud83e\udde9 Xcode Setup","text":""},{"location":"mobile/ios/ios-google-maps-integration/#21-required-sdks","title":"2.1 Required SDKs","text":"<p>Make sure <code>GoogleMaps</code> and <code>GooglePlaces</code> SDKs are installed in your project.</p>"},{"location":"mobile/ios/ios-google-maps-integration/#22-define-api-key","title":"2.2 Define API Key","text":"<p>In your <code>AppDelegate.swift</code>, inside the <code>application(_:didFinishLaunchingWithOptions:)</code> method, add:</p> <pre><code>import GoogleMaps\nimport GooglePlaces\n\nGMSServices.provideAPIKey(\"YOUR_API_KEY\")\nGMSPlacesClient.provideAPIKey(\"YOUR_API_KEY\")\n</code></pre> <p>It\u2019s recommended to fetch the API key from a configuration file or plist instead of hardcoding.</p>"},{"location":"mobile/ios/ios-google-maps-integration/#23-infoplist-settings","title":"2.3 Info.plist Settings","text":"<p>Add the following keys and descriptions if your app uses location services:</p> <pre><code>\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Permission required to show your location on the map.&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Permission required to show your location on the map.&lt;/string&gt;\n&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;\n&lt;true/&gt;\n</code></pre> <p>Location permissions are necessary if your app uses device location features.</p>"},{"location":"mobile/ios/ios-google-maps-integration/#3-in-app-settings","title":"3. In-App Settings","text":"<ul> <li> <p>Ensure your Bundle ID exactly matches the one set in Google Cloud Console.</p> </li> <li> <p>Consider defining the API key in a configuration file (e.g., <code>Config.plist</code> or <code>Environment.swift</code>) for easier   management.</p> </li> <li> <p>Use different API keys for testing and production environments if needed.</p> </li> </ul>"},{"location":"mobile/ios/ios-google-maps-integration/#4-testing-debugging","title":"4. Testing &amp; Debugging","text":"<p>Test the following features inside your app:</p> <ul> <li>Does the map load correctly?</li> <li>Are pins placed correctly on the map?</li> <li>Are location permissions requested and handled properly?</li> <li>Does Places API autocomplete return results as expected?</li> <li>Can addresses be added via the map?</li> </ul> <p>If you encounter errors in Logcat, check:</p> <ul> <li>The API key might be incorrect.</li> <li>Required APIs might not be enabled.</li> <li>iOS location permissions might be missing.</li> <li>Check Xcode Console logs for messages like:</li> </ul> <pre><code>Google Maps SDK for iOS version...\nLoaded GMSCoreResources.bundle\n</code></pre>"},{"location":"mobile/ios/ios-google-maps-integration/#notes","title":"Notes","text":"<ul> <li> <p>Google Maps usage includes a $200 free monthly credit; billing applies if usage exceeds this.</p> </li> <li> <p>Autocomplete queries can be frequent; consider adding throttling or limiting requests.</p> </li> </ul>"},{"location":"mobile/ios/ios-push-notification-integration/","title":"iOS Push Notification Integration","text":"<p>This document provides step-by-step instructions to create an APNs Authentication Key (.p8) from Apple Developer, add the GoogleService-Info.plist file to the project, and configure necessary settings in Firebase Console.</p> <p>The goal is to enable push notification delivery to iOS devices via Firebase.</p>"},{"location":"mobile/ios/ios-push-notification-integration/#prerequisites","title":"\ud83d\udccb Prerequisites","text":"Requirement Description Notes \u2705 Apple Developer Account Apple Developer account required See iOS TestFlight Integration for details. \u2705 Firebase Project Firebase project must be created See iOS Firebase Integration for details. \u2705 iOS App created with Xcode The app must be registered in Firebase \u2705 Physical iOS device Required for push testing (simulator not supported)"},{"location":"mobile/ios/ios-push-notification-integration/#1-firebase-setup","title":"\ud83e\udde9 1. Firebase Setup","text":"<p>Follow the document for creating a Firebase project and adding the <code>GoogleService-Info.plist</code> file to the project:</p> <p>iOS Firebase Integration</p>"},{"location":"mobile/ios/ios-push-notification-integration/#2-app-store-connect-and-apple-developer-setup","title":"\ud83e\udde9 2. App Store Connect and Apple Developer Setup","text":"<p>Follow the document for Apple Developer account setup and app registration:</p> <p>iOS TestFlight Integration</p>"},{"location":"mobile/ios/ios-push-notification-integration/#3-create-apns-authentication-key-p8","title":"\ud83d\udd11 3. Create APNs Authentication Key (.p8)","text":"<ol> <li>Log in to Apple Developer    at Apple Developer Auth Keys.</li> <li>Click the \"+\" (Create a key) button at the top right.</li> <li>Fill in required information:<ul> <li>Key Name: e.g., <code>FCM APNs Key</code></li> <li>Services: Select Apple Push Notifications service (APNs) \u2705</li> </ul> </li> <li>Click Continue &gt; Register, then download the .p8 file.</li> <li>Note these values:<ul> <li>Key ID (shown on the main page)</li> <li>Team ID (found under Membership)</li> </ul> </li> </ol>"},{"location":"mobile/ios/ios-push-notification-integration/#4-upload-apns-key-to-firebase-console","title":"\u2601\ufe0f 4. Upload APNs Key to Firebase Console","text":"<ol> <li>Go to Firebase Console &gt; Project Settings &gt; Cloud Messaging tab.</li> <li>Scroll down to iOS App Configuration &gt; APNs Authentication Key section.</li> <li>Upload the .p8 file.</li> <li>Fill in Key ID and Team ID fields.</li> <li>Click Save.</li> </ol> <p>\u2705 Firebase is now authorized to connect to APNs!</p>"},{"location":"mobile/ios/ios-push-notification-integration/#5-ios-app-push-notification-setup","title":"\u2699\ufe0f 5. iOS App Push Notification Setup","text":"<p>Ensure <code>FirebaseMessaging</code> SDK is installed.</p> <ul> <li>Add the following code in <code>AppDelegate.swift</code>:</li> </ul> <pre><code>import UIKit\nimport Firebase\nimport UserNotifications\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n  func application(_ application: UIApplication,\n                   didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool {\n    FirebaseApp.configure()\n\n    UNUserNotificationCenter.current().delegate = self\n    UNUserNotificationCenter.current().requestAuthorization(options: [.alert, .badge, .sound]) { granted, error in\n        print(\"Push permission: \\(granted)\")\n    }\n\n    application.registerForRemoteNotifications()\n    Messaging.messaging().delegate = self\n\n    return true\n  }\n\n  func application(_ application: UIApplication,\n                   didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n    Messaging.messaging().apnsToken = deviceToken\n  }\n}\n</code></pre> <ul> <li><code>MessagingDelegate</code> and <code>UNUserNotificationCenterDelegate</code> Extensions:</li> </ul> <pre><code>extension AppDelegate: MessagingDelegate {\n  func messaging(_ messaging: Messaging, didReceiveRegistrationToken fcmToken: String?) {\n    // Send token to backend\n    NotificationServiceV2Helper.shared.saveFCMToken(fcmToken)\n  }\n}\n\nextension AppDelegate: UNUserNotificationCenterDelegate {\n  func userNotificationCenter(_ center: UNUserNotificationCenter,\n                              willPresent notification: UNNotification,\n                              withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -&gt; Void) {\n    completionHandler([.alert, .badge, .sound])\n  }\n}\n</code></pre>"},{"location":"mobile/ios/ios-push-notification-integration/#6-test-send-push-via-firebase-console","title":"\ud83d\ude80 6. Test: Send Push via Firebase Console","text":"<ol> <li>Go to Firebase Console &gt; Cloud Messaging.</li> <li>Click Send your first message.</li> <li>Enter title and message.</li> <li>Select Test on device.</li> <li>Enter the FCM token retrieved from the iOS device.</li> <li>Click Send Test Message.</li> </ol> <p>\u2705 Push notification should appear on the device.</p>"},{"location":"mobile/ios/ios-push-notification-integration/#notes-tips","title":"\ud83e\udde0 Notes &amp; Tips","text":"<ul> <li>The .p8 APNs key is valid for all your apps (one key for all bundle IDs).</li> <li>Push notifications do not work on the simulator; testing must be on a physical device.</li> <li>If you don't have a physical device, upload your app to TestFlight and ask someone with a real device to test.</li> <li>To receive push notifications:<ul> <li>Notification permission must be granted.</li> <li>Device must have an internet connection.</li> <li>FCM token must be sent correctly to your backend.</li> </ul> </li> </ul>"},{"location":"mobile/ios/ios-push-notification-integration/#faq","title":"\ud83d\udcac FAQ","text":"<p>Q: When I visit https://developer.apple.com/account/resources/, I get this error:</p> <p>Access Unavailable This resource is only for developers enrolled in a developer program or members of an organization's team in a developer program.</p> <p>A: You need to be added to the Apple Developer account by an authorized person. See step 2 for details.</p> <p>Q: When I visit https://developer.apple.com/account/resources/authkeys/list, I get this error:</p> <p>You are not allowed to perform this operation. Please check with one of your Team Admins, or, if you need further assistance, please contact Apple Developer Program Support. https://developer.apple.com/support</p> <p>A: You need to be added to the Apple Developer account by an authorized person. See step 2 for details.</p>"},{"location":"mobile/ios/ios-test-flight-integration/","title":"iOS TestFlight Integration","text":"<p>This document guides you through the steps to enable testing of your local iOS project via TestFlight by other users.</p>"},{"location":"mobile/ios/ios-test-flight-integration/#requirements","title":"Requirements","text":"<ul> <li>Apple Developer account (annual $99 fee)</li> <li>Xcode</li> <li>Valid provisioning profile for your Apple device</li> <li>Access to App Store Connect (same Apple account)</li> <li>App must have a Bundle ID and version number</li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#1-app-store-connect-and-apple-developer-setup","title":"1. App Store Connect and Apple Developer Setup","text":"<ul> <li>Have an authorized person invite you to App Store Connect via https://appstoreconnect.apple.com/access/users with Developer role for read access or App Manager role for admin tasks.</li> <li>Accept the invitation email and set your password to activate your developer account.</li> <li>Log in to https://developer.apple.com/account/</li> <li>Create an App ID (Bundle ID) under https://developer.apple.com/account/resources/identifiers/list if you haven\u2019t already. Xcode might create some automatically but you may need to create others manually.</li> <li>In App Store Connect (https://appstoreconnect.apple.com/apps), create a new app:<ul> <li>Platform: iOS</li> <li>Name: (Your app\u2019s internal or public name) (e.g. <code>MyApp Internal</code>)</li> <li>Primary Language: Choose your language</li> <li>Bundle ID: Must exactly match the one in Xcode (e.g. <code>com.example.app.internal</code>)</li> <li>SKU: A unique short identifier (e.g. <code>com.example.app.internal</code>)</li> </ul> </li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#2-prepare-your-app-in-xcode","title":"2. Prepare Your App in Xcode","text":"<ul> <li>Open your project in Xcode.</li> <li>Under the General tab:<ul> <li>Verify Version and Build number (e.g. Version = 1.0.0, Build = 1)</li> <li>Manually increment Build number for each archive.</li> </ul> </li> <li>Under Signing &amp; Capabilities, select your Team.</li> <li>Archive your app via Product &gt; Archive.</li> <li>When archive completes, Organizer window opens.</li> <li>Select the new archive, then click Distribute App.</li> <li>Choose App Store Connect &gt; Upload.</li> <li>Follow the steps until you receive the \"Upload succeeded\" message.</li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#3-configure-testflight-in-app-store-connect","title":"3. Configure TestFlight in App Store Connect","text":"<ul> <li>Go to App Store Connect &gt; My Apps &gt; Select your app.</li> <li>Open the TestFlight tab.</li> <li>Wait for your uploaded build to appear (may take a few minutes).</li> <li>For internal testing:<ul> <li>Go to Internal Testing &gt; click \"+\" to create a test group.</li> <li>Add testers to the group.</li> <li>Optionally enable automatic assignment of builds to this group.</li> </ul> </li> <li>Approve the build.</li> <li>Invite Internal Testers (team members) or External Testers (outside testers).</li> <li>Note: External testers require a brief Apple review process (usually 1\u20132 days).</li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#4-what-testers-receive","title":"4. What Testers Receive","text":"<ul> <li>Testers download the TestFlight app from the App Store.</li> <li>They are invited via their Apple ID email.</li> <li>Invitations contain a message like: \"You\u2019ve been invited to test [App Name].\"</li> <li>After accepting, testers can install and test your app.</li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#notes","title":"Notes","text":"<ul> <li>The app does not need to be published on the App Store.</li> <li>TestFlight allows up to 10,000 testers per app.</li> <li>Each build can be tested for up to 90 days.</li> <li>Crash and usage reports are available via TestFlight.</li> </ul>"},{"location":"mobile/ios/ios-test-flight-integration/#faq","title":"FAQ","text":"<p>Q: I get this error while archiving:</p> <ol> <li>No profiles for 'com.example.app.internal.NotificationService' were found      &gt;  Xcode couldn't find any iOS App Store provisioning profiles matching 'com.example.app.internal.NotificationService'.</li> <li>Automatic signing cannot register bundle identifier \"com.example.app.internal.NotificationService\".       &gt;  Automatic signing cannot register bundle identifiers with Apple. Register your bundle identifier on https://developer.apple.com/account and then try again.</li> </ol> <p>A: Your app's bundle ID <code>com.example.app.internal.NotificationService</code> is not registered as an App ID. Register it manually at https://developer.apple.com/account/resources/identifiers/list.</p> <p>Q: I get this validation error when archiving:</p> <p>Validation failed Invalid large app icon. The large app icon in the asset catalog in your app can\u2019t be transparent or contain an alpha channel. For details, visit: https://developer.apple.com/design/human-interface-guidelines/app-icons.</p> <p>A: App Store does not accept app icons with transparency. Remove transparency or corner rounding in your icons (set corner radius to 0 and fill background with a solid color).</p>"},{"location":"tools/apicurio-via-docker/","title":"Apicurio Installation via Docker","text":"<p>Apicurio Registry is an open-source registry for storing and retrieving API artifacts such as OpenAPI definitions, AsyncAPI definitions, Avro schemas, JSON Schema, and more. This guide explains how to install and run Apicurio (both backend and UI) using Docker.</p>"},{"location":"tools/apicurio-via-docker/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker installed on your system</li> <li>Ensure that ports 8080 (backend) and 8888 (UI) are free before starting</li> <li>You can check if a port is in use with:</li> </ul> <pre><code>lsof -i:8080  \nlsof -i:8888\n</code></pre>"},{"location":"tools/apicurio-via-docker/#step-1-install-docker-macos-example-with-homebrew","title":"Step 1 \u2014 Install Docker (MacOS example with Homebrew)","text":"<p><code>brew install docker</code></p>"},{"location":"tools/apicurio-via-docker/#step-2-run-the-backend","title":"Step 2 \u2014 Run the Backend","text":"<ol> <li>Pull the Apicurio Registry backend image:</li> </ol> <p><code>docker pull apicurio/apicurio-registry:3.0.6</code></p> <ol> <li>Run the backend container:</li> </ol> <p><code>docker run -it -p 8080:8080 apicurio/apicurio-registry:3.0.6</code></p> <ol> <li>Open your browser and navigate to: http://localhost:8080/</li> </ol>"},{"location":"tools/apicurio-via-docker/#step-3-run-the-ui","title":"Step 3 \u2014 Run the UI","text":"<ol> <li>Pull the Apicurio Registry UI image:</li> </ol> <p><code>docker pull apicurio/apicurio-registry-ui:3.0.6</code></p> <ol> <li>Run the UI container:</li> </ol> <p><code>docker run -it -p 8888:8080 apicurio/apicurio-registry-ui:3.0.6</code></p> <ol> <li>Open your browser and navigate to: http://localhost:8888/</li> </ol>"},{"location":"tools/apicurio-via-docker/#step-4-upload-and-validate-api-artifacts","title":"Step 4 \u2014 Upload and Validate API Artifacts","text":"<p>Once the UI is connected to the backend:</p> <ol> <li>Go to the UI (http://localhost:8888/)</li> <li>Use the Upload feature to add your API definition file (e.g., OpenAPI, Avro, JSON Schema).</li> <li>Explore detailed documentation, validation results, and example payloads.</li> </ol> <p>Note: Postman does not provide schema-level validation and example previews for these formats \u2014 using Apicurio UI is more powerful for this purpose.</p>"},{"location":"tools/apicurio-via-docker/#step-5-stopping-containers","title":"Step 5 \u2014 Stopping Containers","text":"<p>To stop the backend:</p> <p><code>docker ps</code>  # find the container ID for the backend <code>docker stop &lt;container_id&gt;</code></p> <p>To stop the UI:</p> <p><code>docker ps</code>  # find the container ID for the UI <code>docker stop &lt;container_id&gt;</code></p>"},{"location":"tools/kafkaui-via-docker/","title":"Local Kafka UI Setup with Docker","text":"<p>This guide explains how to set up and use Kafka UI locally with Docker for debugging and inspecting Kafka topics.</p>"},{"location":"tools/kafkaui-via-docker/#1-list-available-topics","title":"1. List Available Topics","text":"<p>To list the topics in a running Kafka cluster:</p> <pre><code>kafka-topics --bootstrap-server &lt;KAFKA_BOOTSTRAP_SERVER&gt; --list\n</code></pre> <p>Example:</p> <pre><code>kafka-topics --bootstrap-server my-cluster.kafka.local:9094 --list\n</code></pre>"},{"location":"tools/kafkaui-via-docker/#2-get-kafka-cluster-id","title":"2. Get Kafka Cluster ID","text":"<p>To retrieve the cluster ID of your local or remote Kafka cluster:</p> <pre><code>kafka-cluster cluster-id --bootstrap-server &lt;KAFKA_BOOTSTRAP_SERVER&gt;\n</code></pre> <p>Example:</p> <pre><code>kafka-cluster cluster-id --bootstrap-server my-cluster.kafka.local:9094\n</code></pre> <p>You will need this Cluster ID in the next step.</p>"},{"location":"tools/kafkaui-via-docker/#3-run-kafka-ui-with-docker","title":"3. Run Kafka UI with Docker","text":"<p>Run the Kafka UI Docker container, replacing <code>&lt;CLUSTER_ID&gt;</code> and <code>&lt;KAFKA_BOOTSTRAP_SERVER&gt;</code> with your values:</p> <pre><code>    docker run -d -p 8080:8080\n    -e KAFKA_CLUSTERS_0_NAME=&lt;CLUSTER_ID&gt;\n    -e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=&lt;KAFKA_BOOTSTRAP_SERVER&gt;\n    provectuslabs/kafka-ui\n</code></pre> <p>Example:</p> <pre><code>    docker run -d -p 8080:8080\n    -e KAFKA_CLUSTERS_0_NAME=abcd1234ClusterId\n    -e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=my-cluster.kafka.local:9094\n    provectuslabs/kafka-ui\n</code></pre>"},{"location":"tools/kafkaui-via-docker/#4-access-kafka-ui","title":"4. Access Kafka UI","text":"<p>Once the container is running, open your browser and navigate to:</p> <pre><code>http://localhost:8080\n</code></pre> <p>You will see the Kafka UI interface where you can:</p> <ul> <li>Browse topics</li> <li>View messages</li> <li>Manage consumer groups</li> <li>Inspect configurations</li> </ul>"},{"location":"tools/kafkaui-via-docker/#notes","title":"Notes","text":"<ul> <li>Docker must be installed and running on your local machine.</li> <li> <p>Ensure that port 8080 is not already in use. You can check by running:</p> <p>lsof -i:8080</p> </li> <li> <p>Replace placeholder values (<code>&lt;CLUSTER_ID&gt;</code> and <code>&lt;KAFKA_BOOTSTRAP_SERVER&gt;</code>) with actual values from your environment.</p> </li> </ul>"},{"location":"tools/multi-gitter/","title":"Multi-Repository PR Automation with Multi-Gitter","text":"<p>This document introduces a powerful tool called Multi-Gitter, perfect for teams like DevOps or DevEx who need to apply changes across many repositories efficiently.</p> <p>Multi-Gitter runs a script on multiple repositories, automatically creating Pull Requests (PRs) with custom titles and bodies. This allows teams to review and merge changes consistently across all relevant repos.</p>"},{"location":"tools/multi-gitter/#why-use-multi-gitter","title":"Why Use Multi-Gitter?","text":"<ul> <li>Automate repetitive changes across multiple repositories.</li> <li>Keep repo configurations consistent.</li> <li>Easily update or remove files (e.g., config files, CODEOWNERS).</li> <li>Facilitate team collaboration with reviewable PRs.</li> </ul>"},{"location":"tools/multi-gitter/#example-use-cases","title":"Example Use Cases","text":"<ul> <li>Removing deprecated config files from workflow directories in multiple repos.</li> <li>Updating CODEOWNERS files to reflect new team ownership.</li> <li>Bulk modifications related to platform migrations or tooling upgrades.</li> </ul>"},{"location":"tools/multi-gitter/#installation","title":"Installation","text":"<p>On macOS, install via Homebrew:</p> <pre><code>brew install lindell/multi-gitter/multi-gitter\n</code></pre> <p>If you encounter errors related to Command Line Tools, run:</p> <pre><code>sudo rm -rf /Library/Developer/CommandLineTools\nsudo xcode-select --install\n</code></pre>"},{"location":"tools/multi-gitter/#prepare-your-scripts","title":"Prepare Your Scripts","text":"<p>Make sure your shell scripts have execute permission:</p> <pre><code>chmod +x ./update_codeowners.sh\n</code></pre>"},{"location":"tools/multi-gitter/#usage-examples","title":"Usage Examples","text":""},{"location":"tools/multi-gitter/#1-delete-config-files-in-multiple-repos","title":"1. Delete Config Files in Multiple Repos","text":"<p>Dry-run to preview:</p> <pre><code>multi-gitter run ./delete_config.sh \\\n--token YOUR_GITHUB_TOKEN \\\n--repo user/repo1,user/repo2,user/repo3 \\\n--branch feature/remove-config \\\n--pr-title \"Remove config.yml from workflows\" \\\n--pr-body \"This PR removes the unnecessary config.yml file from workflow directories.\" \\\n--dry-run\n</code></pre> <p>Execute actual PR creation:</p> <pre><code>multi-gitter run ./delete_config.sh \\\n--token YOUR_GITHUB_TOKEN \\\n--repo user/repo1,user/repo2,user/repo3 \\\n--branch feature/remove-config \\\n--pr-title \"Remove config.yml from workflows\" \\\n--pr-body \"This PR removes the unnecessary config.yml file from workflow directories.\"\n</code></pre>"},{"location":"tools/multi-gitter/#2-update-codeowners-across-multiple-repos","title":"2. Update CODEOWNERS Across Multiple Repos","text":"<p>Dry-run example:</p> <pre><code>multi-gitter run ./update_codeowners.sh \\\n--token YOUR_GITHUB_TOKEN \\\n--repo user/repo1,user/repo2,user/repo3 \\\n--branch feature/update-codeowners \\\n--pr-title \"Update CODEOWNERS\" \\\n--pr-body \"This PR updates the CODEOWNERS file with correct team assignments.\" \\\n--dry-run\n</code></pre>"},{"location":"tools/multi-gitter/#sample-scripts","title":"Sample Scripts","text":"<p>delete_config.sh:</p> <pre><code>#!/bin/bash\n\n# Check if config.yml exists and remove it\nif [ -f \".github/config.yml\" ]; then\n  git rm .github/config.yml\nelse\n  echo \"config.yml not found, skipping...\"\nfi\n</code></pre> <p>update_codeowners.sh:</p> <pre><code>#!/bin/bash\n\nrepo_name=$REPOSITORY\n\nORG_NAME=\"your-org\"\nCODEOWNERS_FILE=\".github/CODEOWNERS\"\n\n# Example: Clear CODEOWNERS for a specific repo\nif [[ \"$repo_name\" == \"your-org/special-repo\" ]]; then\n  echo \"Clearing CODEOWNERS for $repo_name...\"\n  &gt; $CODEOWNERS_FILE\n  git add $CODEOWNERS_FILE\n  exit 0\nfi\n\n# Assign teams based on repo name\nif [[ \"$repo_name\" == \"your-org/repo1\" ]]; then\n  team=\"@${ORG_NAME}/team1\"\nelif [[ \"$repo_name\" == \"your-org/repo2\" ]]; then\n  team=\"@${ORG_NAME}/team2\"\nelif [[ \"$repo_name\" == \"your-org/repo3\" ]]; then\n  team=\"@${ORG_NAME}/team3\"\nelse\n  echo \"No team assignment found for $repo_name, skipping...\"\n  exit 0\nfi\n\necho \"Updating CODEOWNERS for $repo_name with team $team...\"\n\necho \"* $team\" &gt; $CODEOWNERS_FILE\n\ngit add $CODEOWNERS_FILE\n</code></pre> <p>delete_release.sh:</p> <pre><code>#!/bin/bash\n\nif [ -f \".github/release.yml\" ]; then\n  echo \"Found release.yml. Removing...\"\n  git rm .github/release.yml\nelse\n  echo \"release.yml not found, skipping...\"\nfi\n</code></pre>"}]}